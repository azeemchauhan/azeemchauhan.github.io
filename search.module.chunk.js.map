{"version":3,"sources":["/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/common/constants/app.constants.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/common/services/search.service.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/search.module.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/search.routes.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-circle/planet-circle.component.html","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-circle/planet-circle.component.scss","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-circle/planet-circle.component.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-details/planet-details.component.html","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-details/planet-details.component.scss","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-details/planet-details.component.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-box/search-box.component.html","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-box/search-box.component.scss","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-box/search-box.component.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-result/search-result.component.html","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-result/search-result.component.scss","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-result/search-result.component.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search/search.component.html","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search/search.component.scss","/Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search/search.component.ts","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/Scheduler.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/observable/fromEvent.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/operator/debounceTime.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/operator/do.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/operator/switch.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/observable/FromEventObservable.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/observable/fromEvent.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operator/debounceTime.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operator/do.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operator/switch.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/debounceTime.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/switchAll.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/switchMap.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/tap.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/Action.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/AsyncAction.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js","/Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/async.js"],"names":[],"mappings":"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,wBAAwB,yBAAyB,EAAE;;AAE58B;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;ACXmE;AASnE;IAKE;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IACD,kCAAQ,GAAR,cAAa,CAAC;IAEd,uCAAa,GAAb,UAAc,OAAc;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,qEAAqE;IACvE,CAAC;IAdU,eAAe;QAN3B,wEAAS,CAAC;YACV,QAAQ,EAAE,YAAY;;;YAGtB,aAAa,EAAE,0EAAiB,CAAC,IAAI;SACrC,CAAC;;OACW,eAAe,CAgB3B;IAAD,sBAAC;CAAA;AAhB2B;;;;;;;;;ACT5B;AAAA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA,eAAe,OAAO;AACtB;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA,CAAC;AACD;;;;;;;;;;AClDA;AAAA;AACqB;AACkB;AACvC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACE;AACvB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACP;AACd;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACH;AAClB;AACA;AACA;;;;;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACF;AACE;AACC;AACC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB,KAAK;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,gBAAgB;AAC/B;AACA,eAAe,OAAO;AACtB;AACA,eAAe,qBAAqB;AACpC,eAAe,2BAA2B;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yDAAyD;AAChG;AACA;AACA;AACA;AACA,uCAAuC,yCAAyC;AAChF;AACA;AACA;AACA;AACA,uCAAuC,oDAAoD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,2BAA2B;AACrD;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACxNA;AAAA;AAC8B;AAC9B;AACA;;;;;;;;;;;ACHA;AAAA;AACgB;AACsB;AACtC;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvDA;AAAA;AAC6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,kBAAkB;AAC7B;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjDA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACL;AAChB;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAkE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;;;;;ACtHA;AAAA;AACoB;AACD;AACnB;AACA;AACA;AACA;;;;;;;;;;;ACNA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC9IA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,kBAAkB;AAC7B;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACjHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACvB;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC9CA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACe;AACE;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACpJA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACnDA;AAAA;AACsB;AACG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"search.module.chunk.js","sourcesContent":["export const APP_CONSTANT: any = {\n        BaseUrl:'https://swapi.co/api/',\n        SEARCH_LIMIT:15\n};\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/common/constants/app.constants.ts","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse, HttpHeaders} from \"@angular/common/http\";\nimport { Http, Response } from '@angular/http';\nimport {Observable} from 'rxjs/Rx';\n@Injectable()\nexport class SearchServices {\n\tconstructor(private http: Http) {\n\n\t}\n\tsearch(query: string): Observable<any[]> {\n\t\tconst params: string = [\n\t\t  `search=${query}`\n\t\t].join('&');\n\t\tconst queryUrl = `https://swapi.co/api/planets?${params}`;\n\t\treturn this.http.get(queryUrl).map((response: Response) => {\n\t\t  return (<any>response.json().results)\n\t\t});\n\t\t}\n\tdetails(url: string):Observable<any[]>{\n\t\tconsole.log(url)\n\t\treturn this.http.get(url)\n\t\t.map((response: Response)=> {\n\t\t\treturn (<any>response.json())\n\t\t})\n\t}\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/common/services/search.service.ts","import { NgModule , CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport {SearchRoutesRoutingModule} from './search.routes';\nimport { SearchServices } from './common/services/search.service';\nimport { SearchComponent } from './views/search/search.component';\nimport { SearchBoxComponent } from './views/search-box/search-box.component';\nimport { SearchResultComponent } from './views/search-result/search-result.component';\nimport { PlanetCircleComponent } from './views/planet-circle/planet-circle.component';\nimport { PlanetDetailsComponent } from './views/planet-details/planet-details.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n\t\tHttpClientModule,\n    SearchRoutesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    SearchComponent,\n    SearchBoxComponent,\n    SearchResultComponent,\n    PlanetCircleComponent,\n    PlanetDetailsComponent\n  \t],\n  providers:[\n    SearchServices\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  entryComponents: [\n  ]\n})\nexport class SearchModule { }\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/search.module.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes }  from '@angular/router';\n\nimport { SearchComponent } from './views/search/search.component';\nimport { PlanetDetailsComponent } from './views/planet-details/planet-details.component';\n\nconst SearchRoutes: Routes = [\n\t{ path: '', component: SearchComponent},\n\t{ path: 'details/:name', component: PlanetDetailsComponent}];\nexport const SearchRoutesRoutingModule: ModuleWithProviders = RouterModule.forChild(SearchRoutes);\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/search.routes.ts","module.exports = \"<svg #svg height=\\\"200\\\" width=\\\"200\\\">\\n        <circle #circle cx=\\\"100\\\" cy=\\\"100\\\" />\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-circle/planet-circle.component.html\n// module id = ../../../../../src/app/modules/search/views/planet-circle/planet-circle.component.html\n// module chunks = search.module","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"circle {\\n  -webkit-transition: stroke-opacity 1s, stroke-width 1s, -webkit-transform 1s;\\n  transition: stroke-opacity 1s, stroke-width 1s, -webkit-transform 1s;\\n  transition: stroke-opacity 1s, stroke-width 1s, transform 1s;\\n  transition: stroke-opacity 1s, stroke-width 1s, transform 1s, -webkit-transform 1s;\\n  -webkit-transform-origin: 50% 50%;\\n          transform-origin: 50% 50%; }\\n\\ncircle:hover {\\n  -webkit-transform: scale(1.2);\\n          transform: scale(1.2); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-circle/planet-circle.component.scss\n// module id = ../../../../../src/app/modules/search/views/planet-circle/planet-circle.component.scss\n// module chunks = search.module","import { Component, OnInit, Output, EventEmitter, ElementRef, ViewChild, AfterContentInit, Input, Renderer2 } from '@angular/core';\nimport { isNumber } from 'util';\n@Component({\n  selector: 'app-planet-circle',\n  templateUrl:'./planet-circle.component.html',\n  styleUrls:['./planet-circle.component.scss']\n})\nexport class PlanetCircleComponent implements OnInit, AfterContentInit {\n  @Input('config') config:any; \n  @ViewChild('svg') svgEle: ElementRef;\n  @ViewChild('circle') circleEle: ElementRef;\n  constructor( private el: ElementRef, private _render: Renderer2) { }\n  /**\n   *  create dynamic planet on the basis of \n   *  population\n   *  Domain Radius [0, 100]\n  **/\n  createRadius(): number {\n    let population = parseInt(this.config.population);\n    let max = 1000000000000; //max assume\n    const RADIUS = 80;\n    const default_radious = 25;\n    let radius = Math.ceil((population*RADIUS)/max);\n    return !isNaN(population)?(radius>15?radius:15):default_radious;\n  }\n  setClimate():string {\n    let climate = this.config.climate;\n    let result = 'LightCoral';\n    if(climate.indexOf(\"temperate\")>-1){ \n      result = 'LightCoral';\n    }\n    if(climate.indexOf(\"arid\")>-1){ \n      result = 'olive';\n    }\n    if(climate.indexOf(\"frozen\")>-1){ \n      result = 'silver';\n    }\n    if(climate.indexOf(\"murky\")>-1){ \n      result = 'yellow';\n    }\n    return result;\n  }\n  renderPlanet():void {\n    this._render.setAttribute(this.circleEle.nativeElement, 'r', this.createRadius().toString());\n    this._render.setAttribute(this.circleEle.nativeElement, 'fill', this.setClimate())\n  }\n  ngOnInit(): void { \n    // console.log(this.config);\n   }\n  ngAfterContentInit(): void {\n   // console.log(this.createRadius());\n    this.renderPlanet()\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-circle/planet-circle.component.ts","module.exports = \"<div class=\\\"loader\\\" *ngIf=\\\"loader\\\">\\n      <img src=\\\"assets/images/loader.gif\\\" />\\n</div>\\n<div *ngIf=\\\"!loader\\\">\\n      <a class=\\\"btn btn-lg go-back\\\" [routerLink]=\\\"['/planets']\\\">\\n            << Search Planets</a>\\n                  <section class=\\\"jumbotron text-center\\\">\\n                        <div class=\\\"container\\\">\\n                              <h1 class=\\\"jumbotron-heading\\\">Star Wars Planet - {{ planet.name }}</h1>\\n                              <div class=\\\"planet\\\">\\n                                    <svg #svg height=\\\"300\\\" width=\\\"300\\\">\\n                                          <circle #circle cx=\\\"150\\\" cy=\\\"150\\\" r=\\\"100\\\" fill=\\\"green\\\" />\\n                                    </svg>\\n                              </div>\\n                        </div>\\n                  </section>\\n                  <section>\\n                  <div class=\\\"container\\\">\\n                              <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-4\\\">\\n                                          <h5>Population</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.population}}</a>\\n                                                </li>\\n                                          </ul>\\n                                          <h5>Created</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.created | date}}</a>\\n                                                </li>\\n                                          </ul>\\n                                          <h5>Edited</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.edited | date}}</a>\\n                                                </li>\\n                                          </ul>\\n                                    </div>\\n                                    <div class=\\\"col-md-4\\\">\\n                                          <h5>Gravity</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.gravity}}</a>\\n                                                </li>\\n                                          </ul>\\n                                          <h5>Rotation Period</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.rotation_period}}</a>\\n                                                </li>\\n                                          </ul>\\n                                          <h5>Orbital Speed</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.orbital_period}}</a>\\n                                                </li>\\n                                          </ul>\\n                                          <h5>Diameter</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.diameter}}</a>\\n                                                </li>\\n                                          </ul>\\n                                    </div>\\n                                    <div class=\\\"col-md-4\\\">\\n                                          <h5>Surface Water</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.surface_water}}</a>\\n                                                </li>\\n                                          </ul>\\n                                          <h5>Terrain</h5>\\n                                          <ul class=\\\"list-unstyled text-small\\\">\\n                                                <li>\\n                                                      <a class=\\\"text-muted\\\">{{planet.terrain}}</a>\\n                                                </li>\\n                                          </ul>\\n                                    </div>\\n                              </div>\\n\\n                              <hr>\\n\\n                        </div>\\n                  </section>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-details/planet-details.component.html\n// module id = ../../../../../src/app/modules/search/views/planet-details/planet-details.component.html\n// module chunks = search.module","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".planet {\\n  margin: auto; }\\n\\n.loader {\\n  height: 100%;\\n  width: 100%; }\\n\\n.loader img {\\n    display: block;\\n    margin: 100px auto; }\\n\\n.go-back {\\n  float: left;\\n  width: 100px; }\\n\\n.pl-40 {\\n  padding-left: 40px; }\\n\\ncircle {\\n  -webkit-transition: stroke-opacity 1s, stroke-width 1s, -webkit-transform 1s;\\n  transition: stroke-opacity 1s, stroke-width 1s, -webkit-transform 1s;\\n  transition: stroke-opacity 1s, stroke-width 1s, transform 1s;\\n  transition: stroke-opacity 1s, stroke-width 1s, transform 1s, -webkit-transform 1s;\\n  -webkit-transform-origin: 50% 50%;\\n          transform-origin: 50% 50%; }\\n\\ncircle:hover {\\n  -webkit-transform: scale(1.2);\\n          transform: scale(1.2); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-details/planet-details.component.scss\n// module id = ../../../../../src/app/modules/search/views/planet-details/planet-details.component.scss\n// module chunks = search.module","import { Component, OnInit, Output, EventEmitter, ElementRef, ViewChild, AfterContentInit, Input, Renderer2 } from '@angular/core';\nimport { SearchServices } from '../../common/services/search.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-planet-details',\n  templateUrl:'./planet-details.component.html',\n  styleUrls:['./planet-details.component.scss']\n})\nexport class PlanetDetailsComponent implements OnInit {\n  planet:any;\n  loader:boolean = true;\n  constructor( private route:ActivatedRoute, private search: SearchServices) { \n\n  }\n  fetchDetails(planetUrl:string):void {\n    this.search.details(planetUrl).subscribe((result:any)=>{\n      console.log(result)\n      this.planet = result;\n      this.loader = false;\n    })\n  }\n  ngOnInit(): void { \n    /**\n     * fetch params from url\n     */\n    this.route.queryParams\n    .map(params=> params.url)\n    .subscribe(params =>{\n      this.fetchDetails(params);\n    })\n   }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/planet-details/planet-details.component.ts","module.exports = \"<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search your favorite Planet\\\" autofocus>\\n<p class=\\\"limit_exceeded\\\" *ngIf=\\\"userNotAllowed\\\">Search limit for unauthenticated user is exceeded, user can search upto 15 times.</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-box/search-box.component.html\n// module id = ../../../../../src/app/modules/search/views/search-box/search-box.component.html\n// module chunks = search.module","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".limit_exceeded {\\n  margin-top: 10px;\\n  color: #dc7a48;\\n  float: left;\\n  font-size: 12px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-box/search-box.component.scss\n// module id = ../../../../../src/app/modules/search/views/search-box/search-box.component.scss\n// module chunks = search.module","import { Component, OnInit, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { APP_CONSTANT } from '../../../../common/constants/app.constants'\n// By importing just the rxjs operators we need, We're theoretically able\n// to reduce our build size vs. importing all of them.\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/switch';\n\nimport { SearchServices } from '../../common/services/search.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'APP_PATH/common/services/authentication.service';\n\n@Component({\n  selector: 'app-search-box',\n  templateUrl:'./search-box.component.html',\n  styleUrls:['./search-box.component.scss']\n})\nexport class SearchBoxComponent implements OnInit {\n  @Output() loading: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() results: EventEmitter<any[]> = new EventEmitter<any[]>();\n  searchLimit:number;\n  user:any;\n  userNotAllowed:boolean;\n  constructor(private search: SearchServices, private el: ElementRef, private route: ActivatedRoute, private authService: AuthService) {  \n    this.searchLimit = 0;\n    this.userNotAllowed = false;\n    this.defaultSearch('');\n    this.authService.isLogin().subscribe((userInfo)=>{\n\t\t\tthis.user = userInfo;\n\t\t});\n  }\n  defaultSearch(query: string):void {\n    this.search.search(query).subscribe( (results: any[]) => { \n        this.loading.emit(false);\n        this.results.emit(results);\n        this.searchLimit++;\n      },(err: any) => {\n        this.loading.emit(false);\n      },() => {\n        this.loading.emit(false);\n      }\n    )\n  }\n  ngOnInit(): void {\n    this.route.queryParams\n    .filter(params => params.search)\n    .subscribe(params=>{\n      console.log('Query Params Search is :'+params.search);\n      this.defaultSearch(params.search);\n    });\n    // convert the `keyup` event into an observable stream\n    Observable.fromEvent(this.el.nativeElement, 'keyup')\n      .map((e: any) => e.target.value)\n      .filter((text: string) => text.length > 1)\n      .debounceTime(250)\n      .do(() => this.loading.emit(true)) //enable loader\n      .map((query: string) => {\n        console.log(this.user)\n        if( this.user.isLogin || this.searchLimit<APP_CONSTANT.SEARCH_LIMIT){\n          this.searchLimit++;\n          return this.search.search(query)\n        }else {\n          return new Observable(observer=>{\n            observer.error({ status: `User Can Only Search ${APP_CONSTANT.SEARCH_LIMIT} times.` });\n          });\n        }\n      })\n      .switch()\n      .subscribe(\n        (results: any[]) => { // on sucesss\n         // console.log(results);\n          this.loading.emit(false);\n          this.results.emit(results);\n        },\n        (err: any) => { // on error\n          console.log(err);\n          this.userNotAllowed = true;\n          this.loading.emit(false);\n        },\n        () => { // on completion\n          this.loading.emit(false);\n        }\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-box/search-box.component.ts","module.exports = \"  <div class=\\\"card mb-4 box-shadow\\\">\\n      <div class=\\\"planet\\\">\\n          <app-planet-circle [config] = \\\"result\\\"></app-planet-circle>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <h3>{{result.name}}</h3>\\n        <div class=\\\"planet-details\\\">\\n            <div class=\\\"chip blue lighten-4 selected\\\">Climate: {{result.climate}}</div>\\n            <div class=\\\"chip blue lighten-4 selected\\\">Diameter: {{result.diameter}}</div>\\n            <div class=\\\"chip blue lighten-4 selected\\\">Gravity: {{result.gravity}}</div>\\n            <div class=\\\"chip blue lighten-4 selected\\\">Terrain: {{result.terrain}}</div>\\n            <div class=\\\"chip blue lighten-4 selected\\\">Water: {{result.surface_water}}</div>\\n        </div>\\n        <div class=\\\"d-flex justify-content-between align-items-center\\\">\\n          <div class=\\\"btn-group\\\">\\n            <button  type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click) = \\\"planetDetails()\\\">View details »</button>\\n          </div>\\n          <small class=\\\"text-muted\\\">Orbital Period: {{result.orbital_period}}</small>\\n        </div>\\n      </div>\\n    </div>\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-result/search-result.component.html\n// module id = ../../../../../src/app/modules/search/views/search-result/search-result.component.html\n// module chunks = search.module","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".planet {\\n  margin: auto; }\\n  .planet + .card-body > .d-flex {\\n    margin-top: 20px; }\\n  .chip {\\n  display: inline-block;\\n  padding: 0 15px;\\n  height: 18px;\\n  font-size: 12px;\\n  border-radius: 9px;\\n  background-color: #f1f1f1; }\\n  .planet-details {\\n  min-height: 100px;\\n  overflow: hidden; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-result/search-result.component.scss\n// module id = ../../../../../src/app/modules/search/views/search-result/search-result.component.scss\n// module chunks = search.module","import { Component, OnInit, Input, HostBinding } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls : ['./search-result.component.scss']\n})\nexport class SearchResultComponent implements OnInit {\n  @Input() result: any;\n  @HostBinding('class.col-md-4') box: boolean  = true;\n  constructor(private router: Router) { }\n  planetDetails():void{\n    this.router.navigate(['planets', 'details',this.result.name ],{ queryParams: { 'url':this.result.url} })\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search-result/search-result.component.ts","module.exports = \"<section class=\\\"jumbotron text-center\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"jumbotron-heading\\\">Star Wars Planet Search.</h1>\\n    <p class=\\\"lead text-muted\\\">Search your favourite Planet data used in Star war Movies, and displaying planet according to its size.</p>\\n    <p>\\n      <app-search-box (loading)=\\\"loading = $event\\\" (results)=\\\"updateResults($event)\\\"></app-search-box>\\n    </p>\\n  </div>\\n</section>\\n<div class=\\\"album py-5 bg-light\\\">\\n  <div class=\\\"loader\\\" *ngIf=\\\"loading\\\">\\n        <img  src=\\\"assets/images/loader.gif\\\" />\\n  </div>\\n  <div class=\\\"container\\\" *ngIf=\\\"!loading\\\">\\n    <div *ngIf=\\\"results.length==0\\\">\\n      No Planets found!!\\n    </div>\\n    <div class=\\\"row\\\">\\n        <app-search-result *ngFor=\\\"let result of results\\\" [result]=\\\"result\\\"> </app-search-result>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search/search.component.html\n// module id = ../../../../../src/app/modules/search/views/search/search.component.html\n// module chunks = search.module","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"* {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box; }\\n\\n/* Style the search field */\\n\\nform.example input[type=text] {\\n  padding: 10px;\\n  font-size: 17px;\\n  border: 1px solid grey;\\n  float: left;\\n  width: 80%;\\n  background: #f1f1f1; }\\n\\n/* Style the submit button */\\n\\nform.example button {\\n  float: left;\\n  width: 20%;\\n  padding: 10px;\\n  background: #2196F3;\\n  color: white;\\n  font-size: 17px;\\n  border: 1px solid grey;\\n  border-left: none;\\n  /* Prevent double borders */\\n  cursor: pointer; }\\n\\nform.example button:hover {\\n  background: #0b7dda; }\\n\\n/* Clear floats */\\n\\nform.example::after {\\n  content: \\\"\\\";\\n  clear: both;\\n  display: table; }\\n\\n.planets {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-wrap: wrap;\\n      flex-wrap: wrap; }\\n\\n.loader {\\n  width: 100%; }\\n\\n.loader img {\\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search/search.component.scss\n// module id = ../../../../../src/app/modules/search/views/search/search.component.scss\n// module chunks = search.module","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\nimport {APP_CONSTANT} from \"../../../../common/constants/app.constants\";\n\n@Component({\n\tselector: 'app-search',\n\ttemplateUrl: './search.component.html',\n\tstyleUrls: ['./search.component.scss'],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent implements OnInit {\n\n  results: any[];\n  loading: boolean;\n\n  constructor() { \n    this.loading = true;\n  }\n  ngOnInit() { }\n\n  updateResults(results: any[]): void {\n    this.loading = false;\n    this.results = results;\n    // console.log(\"results:\", this.results); // uncomment to take a look\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/src/app/modules/search/views/search/search.component.ts","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport var Scheduler = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\n//# sourceMappingURL=Scheduler.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/Scheduler.js\n// module id = ../../../../rxjs/_esm5/Scheduler.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_fromEvent PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { fromEvent as staticFromEvent } from '../../observable/fromEvent';\nObservable.fromEvent = staticFromEvent;\n//# sourceMappingURL=fromEvent.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/observable/fromEvent.js\n// module id = ../../../../rxjs/_esm5/add/observable/fromEvent.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_debounceTime PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { debounceTime } from '../../operator/debounceTime';\nObservable.prototype.debounceTime = debounceTime;\n//# sourceMappingURL=debounceTime.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/operator/debounceTime.js\n// module id = ../../../../rxjs/_esm5/add/operator/debounceTime.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_do PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _do } from '../../operator/do';\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n//# sourceMappingURL=do.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/operator/do.js\n// module id = ../../../../rxjs/_esm5/add/operator/do.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_switch PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _switch } from '../../operator/switch';\nObservable.prototype.switch = _switch;\nObservable.prototype._switch = _switch;\n//# sourceMappingURL=switch.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/add/operator/switch.js\n// module id = ../../../../rxjs/_esm5/add/operator/switch.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_isFunction,.._util_errorObject,.._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable));\n//# sourceMappingURL=FromEventObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/observable/FromEventObservable.js\n// module id = ../../../../rxjs/_esm5/observable/FromEventObservable.js\n// module chunks = search.module","/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\nimport { FromEventObservable } from './FromEventObservable';\nexport var fromEvent = FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/observable/fromEvent.js\n// module id = ../../../../rxjs/_esm5/observable/fromEvent.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_debounceTime PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { debounceTime as higherOrder } from '../operators/debounceTime';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(dueTime, scheduler)(this);\n}\n//# sourceMappingURL=debounceTime.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operator/debounceTime.js\n// module id = ../../../../rxjs/_esm5/operator/debounceTime.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._operators_tap PURE_IMPORTS_END */\nimport { tap as higherOrder } from '../operators/tap';\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nexport function _do(nextOrObserver, error, complete) {\n    return higherOrder(nextOrObserver, error, complete)(this);\n}\n//# sourceMappingURL=do.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operator/do.js\n// module id = ../../../../rxjs/_esm5/operator/do.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._operators_switchAll PURE_IMPORTS_END */\nimport { switchAll as higherOrder } from '../operators/switchAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nexport function _switch() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=switch.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operator/switch.js\n// module id = ../../../../rxjs/_esm5/operator/switch.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._Subscriber,.._scheduler_async PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nvar DebounceTimeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/debounceTime.js\n// module id = ../../../../rxjs/_esm5/operators/debounceTime.js\n// module chunks = search.module","/** PURE_IMPORTS_START ._switchMap,.._util_identity PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/switchAll.js\n// module id = ../../../../rxjs/_esm5/operators/switchAll.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/switchMap.js\n// module id = ../../../../rxjs/_esm5/operators/switchMap.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/operators/tap.js\n// module id = ../../../../rxjs/_esm5/operators/tap.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from '../Subscription';\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport var Action = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\n//# sourceMappingURL=Action.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/Action.js\n// module id = ../../../../rxjs/_esm5/scheduler/Action.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._util_root,._Action PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AsyncAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\n//# sourceMappingURL=AsyncAction.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/AsyncAction.js\n// module id = ../../../../rxjs/_esm5/scheduler/AsyncAction.js\n// module chunks = search.module","/** PURE_IMPORTS_START .._Scheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Scheduler } from '../Scheduler';\nexport var AsyncScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\n//# sourceMappingURL=AsyncScheduler.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js\n// module id = ../../../../rxjs/_esm5/scheduler/AsyncScheduler.js\n// module chunks = search.module","/** PURE_IMPORTS_START ._AsyncAction,._AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Library/WebServer/Documents/angular-contributions/xebia-interview/node_modules/rxjs/_esm5/scheduler/async.js\n// module id = ../../../../rxjs/_esm5/scheduler/async.js\n// module chunks = search.module"],"sourceRoot":"webpack:///"}